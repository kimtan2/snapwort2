/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/gemini-language/route";
exports.ids = ["app/api/gemini-language/route"];
exports.modules = {

/***/ "(rsc)/./app/api/gemini-language/route.ts":
/*!******************************************!*\
  !*** ./app/api/gemini-language/route.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n\nasync function POST(request) {\n    try {\n        if (!process.env.GOOGLE_API_KEY) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Google API key is not configured. Please set the GOOGLE_API_KEY environment variable.'\n            }, {\n                status: 500\n            });\n        }\n        const { word, language, queryType } = await request.json();\n        if (!word) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Word or query is required'\n            }, {\n                status: 400\n            });\n        }\n        console.log(`API gemini-language called for: \"${word}\" with type ${queryType} in ${language}`);\n        try {\n            // Get language assistance with Gemini\n            const result = await getLanguageAssistanceWithGemini(word, language, queryType);\n            console.log('Successfully generated language assistance');\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(result);\n        } catch (error) {\n            console.error(`Error getting language assistance:`, error);\n            const errorMessage = error instanceof Error ? error.message : String(error);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: errorMessage\n            }, {\n                status: 500\n            });\n        }\n    } catch (error) {\n        console.error('Error parsing request:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: error instanceof Error ? error.message : 'Failed to process request'\n        }, {\n            status: 400\n        });\n    }\n}\nasync function getLanguageAssistanceWithGemini(query, language = 'en', queryType = 'definition') {\n    try {\n        const apiKey = process.env.GOOGLE_API_KEY;\n        // Create system prompt based on query type\n        let systemPrompt = '';\n        let userPrompt = '';\n        if (queryType === 'definition') {\n            systemPrompt = `You are a precise language assistant specialized in providing clear definitions in ${language === 'en' ? 'English' : 'German'}. Format your response with markdown, focusing on the exact meaning, usage, and examples of the term.  Be as precise as possible, please avoid writing more than 100 words!!!`;\n            userPrompt = language === 'en' ? `Provide a precise, clear definition for: \"${query}\" in English. Include part of speech, meaning, usage examples, and related forms if relevant.` : `Gib eine präzise, klare Definition für: \"${query}\" auf Deutsch. Füge Wortart, Bedeutung, Verwendungsbeispiele und verwandte Formen an, wenn relevant.`;\n        } else if (queryType === 'check') {\n            systemPrompt = `You are a language checker that identifies errors, awkward phrasings, and unnatural expressions in ${language === 'en' ? 'English' : 'German'} text. Provide specific corrections and improvements. Format your response with markdown.  Be as precise as possible, please avoid writing more than 100 words!!!`;\n            userPrompt = language === 'en' ? `Check this phrase or sentence for correctness and naturalness: \"${query}\" in English. Point out any errors, awkward phrasings, or unnatural expressions. Suggest improvements.` : `Überprüfe diesen Satz oder diese Phrase auf Korrektheit und Natürlichkeit: \"${query}\" auf Deutsch. Zeige Fehler, ungeschickte Formulierungen oder unnatürliche Ausdrücke auf. Schlage Verbesserungen vor.`;\n        } else if (queryType === 'ask') {\n            systemPrompt = `You are a language expert that answers specific questions about ${language === 'en' ? 'English' : 'German'} language usage, grammar, vocabulary, and linguistics. Address the exact question directly and comprehensively. Format your response with markdown. Be as precise as possible, please avoid writing more than 100 words!!!`;\n            userPrompt = language === 'en' ? `Answer this language-related question: \"${query}\" in English. Provide a comprehensive explanation tailored specifically to this question.` : `Beantworte diese sprachbezogene Frage: \"${query}\" auf Deutsch. Gib eine umfassende Erklärung, die speziell auf diese Frage zugeschnitten ist.`;\n        }\n        // First request: Get the main answer\n        const responseAnswer = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=${apiKey}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                contents: [\n                    {\n                        role: 'user',\n                        parts: [\n                            {\n                                text: systemPrompt\n                            },\n                            {\n                                text: userPrompt\n                            }\n                        ]\n                    }\n                ],\n                generationConfig: {\n                    temperature: 0.2,\n                    maxOutputTokens: 1024\n                }\n            })\n        });\n        if (!responseAnswer.ok) {\n            const errorData = await responseAnswer.json();\n            throw new Error(`Gemini API error (answer): ${JSON.stringify(errorData)}`);\n        }\n        const resultAnswer = await responseAnswer.json();\n        if (!resultAnswer || !resultAnswer.candidates || resultAnswer.candidates.length === 0) {\n            throw new Error('Empty response from Gemini API (answer)');\n        }\n        const contentAnswer = resultAnswer.candidates[0].content;\n        if (!contentAnswer || !contentAnswer.parts || contentAnswer.parts.length === 0) {\n            throw new Error('Invalid response format from Gemini API (answer)');\n        }\n        const answer = contentAnswer.parts[0].text;\n        // Second request: Get meta information (title and suggestions)\n        const metaPrompt = `Based on this language query: \"${query}\" in ${language === 'en' ? 'English' : 'German'}, provide:\n    1. A concise title that represents the main word, idiom, or expression being discussed (not the question itself)\n    2. Four relevant language learning follow-up questions. They should refer to the request and be related to language learning, grammar, usage, idioms, expressions, etc.\n    \n    Return your response as a JSON object with these fields:\n    - \"title\": The main word, idiom, or expression (keep it short and focused)\n    - \"suggestions\": An array of exactly 4 relevant language learning follow-up questions`;\n        const responseMeta = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key=${apiKey}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                contents: [\n                    {\n                        role: 'user',\n                        parts: [\n                            {\n                                text: \"You extract the key information from language queries and generate helpful follow-up questions for language learners. Respond using valid JSON format only.\"\n                            },\n                            {\n                                text: metaPrompt\n                            }\n                        ]\n                    }\n                ],\n                generationConfig: {\n                    temperature: 0.2,\n                    maxOutputTokens: 512\n                }\n            })\n        });\n        if (!responseMeta.ok) {\n            const errorData = await responseMeta.json();\n            throw new Error(`Gemini API error (meta): ${JSON.stringify(errorData)}`);\n        }\n        const resultMeta = await responseMeta.json();\n        if (!resultMeta || !resultMeta.candidates || resultMeta.candidates.length === 0) {\n            throw new Error('Empty response from Gemini API (meta)');\n        }\n        const contentMeta = resultMeta.candidates[0].content;\n        if (!contentMeta || !contentMeta.parts || contentMeta.parts.length === 0) {\n            throw new Error('Invalid response format from Gemini API (meta)');\n        }\n        const metaText = contentMeta.parts[0].text;\n        // Extract JSON from the response\n        let jsonContent = metaText;\n        const jsonRegex = /```(?:json)?\\s*(\\{[\\s\\S]*?\\})\\s*```/;\n        const match = metaText.match(jsonRegex);\n        if (match && match[1]) {\n            jsonContent = match[1].trim();\n        }\n        let title = '';\n        let suggestions = [];\n        try {\n            const parsedData = JSON.parse(jsonContent);\n            title = parsedData.title || extractTitleFromQuery(query);\n            suggestions = Array.isArray(parsedData.suggestions) ? parsedData.suggestions : generateDefaultSuggestions(query, language);\n        } catch (parseError) {\n            console.error(\"JSON parse error:\", parseError);\n            title = extractTitleFromQuery(query);\n            suggestions = generateDefaultSuggestions(query, language);\n        }\n        // Ensure exactly 4 suggestions\n        while(suggestions.length < 4){\n            suggestions.push(`Tell me more about ${title}`);\n        }\n        suggestions = suggestions.slice(0, 4);\n        return {\n            title,\n            answer,\n            suggestions,\n            modelUsed: 'gemini'\n        };\n    } catch (error) {\n        console.error(\"Error calling Gemini API:\", error);\n        throw error;\n    }\n}\n// Helper function to extract a title from the query if the API call fails\nfunction extractTitleFromQuery(query) {\n    // Simple extraction - get the first few words, max 30 chars\n    const words = query.split(/\\s+/);\n    let title = words.slice(0, 3).join(' ');\n    if (title.length > 30) {\n        title = title.substring(0, 27) + '...';\n    }\n    return title;\n}\n// Generate default suggestions if the API call fails\nfunction generateDefaultSuggestions(query, language) {\n    const simplifiedQuery = query.length > 20 ? query.substring(0, 20) + '...' : query;\n    if (language === 'en') {\n        return [\n            `What is the etymology of \"${simplifiedQuery}\"?`,\n            `What are some common phrases using \"${simplifiedQuery}\"?`,\n            `How would I use \"${simplifiedQuery}\" in a sentence?`,\n            `What are the synonyms for \"${simplifiedQuery}\"?`\n        ];\n    } else {\n        return [\n            `Was ist die Etymologie von \"${simplifiedQuery}\"?`,\n            `Was sind gebräuchliche Redewendungen mit \"${simplifiedQuery}\"?`,\n            `Wie würde ich \"${simplifiedQuery}\" in einem Satz verwenden?`,\n            `Was sind Synonyme für \"${simplifiedQuery}\"?`\n        ];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/gemini-language/route.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fgemini-language%2Froute&page=%2Fapi%2Fgemini-language%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgemini-language%2Froute.ts&appDir=%2FUsers%2Fotakhonrustambekov%2FDesktop%2FProgramming%2FSnapWort%202.0%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fotakhonrustambekov%2FDesktop%2FProgramming%2FSnapWort%202.0&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fgemini-language%2Froute&page=%2Fapi%2Fgemini-language%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgemini-language%2Froute.ts&appDir=%2FUsers%2Fotakhonrustambekov%2FDesktop%2FProgramming%2FSnapWort%202.0%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fotakhonrustambekov%2FDesktop%2FProgramming%2FSnapWort%202.0&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_otakhonrustambekov_Desktop_Programming_SnapWort_2_0_app_api_gemini_language_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/gemini-language/route.ts */ \"(rsc)/./app/api/gemini-language/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/gemini-language/route\",\n        pathname: \"/api/gemini-language\",\n        filename: \"route\",\n        bundlePath: \"app/api/gemini-language/route\"\n    },\n    resolvedPagePath: \"/Users/otakhonrustambekov/Desktop/Programming/SnapWort 2.0/app/api/gemini-language/route.ts\",\n    nextConfigOutput,\n    userland: _Users_otakhonrustambekov_Desktop_Programming_SnapWort_2_0_app_api_gemini_language_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZnZW1pbmktbGFuZ3VhZ2UlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmdlbWluaS1sYW5ndWFnZSUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmdlbWluaS1sYW5ndWFnZSUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRm90YWtob25ydXN0YW1iZWtvdiUyRkRlc2t0b3AlMkZQcm9ncmFtbWluZyUyRlNuYXBXb3J0JTIwMi4wJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRm90YWtob25ydXN0YW1iZWtvdiUyRkRlc2t0b3AlMkZQcm9ncmFtbWluZyUyRlNuYXBXb3J0JTIwMi4wJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUErRjtBQUN2QztBQUNxQjtBQUMyQztBQUN4SDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IseUdBQW1CO0FBQzNDO0FBQ0EsY0FBYyxrRUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNEQUFzRDtBQUM5RDtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUMwRjs7QUFFMUYiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL290YWtob25ydXN0YW1iZWtvdi9EZXNrdG9wL1Byb2dyYW1taW5nL1NuYXBXb3J0IDIuMC9hcHAvYXBpL2dlbWluaS1sYW5ndWFnZS9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvZ2VtaW5pLWxhbmd1YWdlL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvZ2VtaW5pLWxhbmd1YWdlXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9nZW1pbmktbGFuZ3VhZ2Uvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvb3Rha2hvbnJ1c3RhbWJla292L0Rlc2t0b3AvUHJvZ3JhbW1pbmcvU25hcFdvcnQgMi4wL2FwcC9hcGkvZ2VtaW5pLWxhbmd1YWdlL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgd29ya0FzeW5jU3RvcmFnZSxcbiAgICAgICAgd29ya1VuaXRBc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fgemini-language%2Froute&page=%2Fapi%2Fgemini-language%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgemini-language%2Froute.ts&appDir=%2FUsers%2Fotakhonrustambekov%2FDesktop%2FProgramming%2FSnapWort%202.0%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fotakhonrustambekov%2FDesktop%2FProgramming%2FSnapWort%202.0&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fgemini-language%2Froute&page=%2Fapi%2Fgemini-language%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgemini-language%2Froute.ts&appDir=%2FUsers%2Fotakhonrustambekov%2FDesktop%2FProgramming%2FSnapWort%202.0%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fotakhonrustambekov%2FDesktop%2FProgramming%2FSnapWort%202.0&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();