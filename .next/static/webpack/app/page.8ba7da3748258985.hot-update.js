"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/db.ts":
/*!*******************!*\
  !*** ./lib/db.ts ***!
  \*******************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SnapWortDB: () => (/* binding */ SnapWortDB),\n/* harmony export */   db: () => (/* binding */ db)\n/* harmony export */ });\n/* harmony import */ var dexie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dexie */ \"(app-pages-browser)/./node_modules/dexie/import-wrapper.mjs\");\n\nclass SnapWortDB extends dexie__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    async addPoints(record) {\n        const id = await this.points.add(record);\n        // Dispatch custom event when points are added\n        window.dispatchEvent(new CustomEvent('pointsAdded', {\n            detail: {\n                ...record,\n                id\n            }\n        }));\n        return id;\n    }\n    constructor(){\n        super('snapwort');\n        this.version(1).stores({\n            words: '++id, word, language, createdAt',\n            points: '++id, points, timestamp, taskId, taskType'\n        });\n    }\n}\nconst db = new SnapWortDB();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9kYi50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUM7QUF5QjlCLE1BQU1DLG1CQUFtQkQsNkNBQUtBO0lBWW5DLE1BQU1FLFVBQVVDLE1BQWdDLEVBQUU7UUFDaEQsTUFBTUMsS0FBSyxNQUFNLElBQUksQ0FBQ0MsTUFBTSxDQUFDQyxHQUFHLENBQUNIO1FBQ2pDLDhDQUE4QztRQUM5Q0ksT0FBT0MsYUFBYSxDQUFDLElBQUlDLFlBQVksZUFBZTtZQUNsREMsUUFBUTtnQkFBRSxHQUFHUCxNQUFNO2dCQUFFQztZQUFHO1FBQzFCO1FBQ0EsT0FBT0E7SUFDVDtJQWZBTyxhQUFjO1FBQ1osS0FBSyxDQUFDO1FBQ04sSUFBSSxDQUFDQyxPQUFPLENBQUMsR0FBR0MsTUFBTSxDQUFDO1lBQ3JCQyxPQUFPO1lBQ1BULFFBQVE7UUFDVjtJQUNGO0FBVUY7QUFFTyxNQUFNVSxLQUFLLElBQUlkLGFBQWEiLCJzb3VyY2VzIjpbIi9Vc2Vycy9vdGFraG9ucnVzdGFtYmVrb3YvRGVza3RvcC9Qcm9ncmFtbWluZy9TbmFwV29ydCAyLjAvbGliL2RiLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBEZXhpZSwgeyBUYWJsZSB9IGZyb20gJ2RleGllJztcblxuZXhwb3J0IGludGVyZmFjZSBGb2xsb3dVcCB7XG4gIHF1ZXN0aW9uOiBzdHJpbmc7XG4gIGFuc3dlcjogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFdvcmQge1xuICBpZD86IG51bWJlcjtcbiAgd29yZDogc3RyaW5nO1xuICBtZWFuaW5nOiBzdHJpbmc7XG4gIGxhbmd1YWdlOiAnZW4nIHwgJ2RlJztcbiAgcXVlcnlUeXBlPzogJ2RlZmluaXRpb24nIHwgJ2NoZWNrJyB8ICdhc2snO1xuICBjcmVhdGVkQXQ6IERhdGU7XG4gIGZvbGxvd1VwSGlzdG9yeT86IEZvbGxvd1VwW107XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUG9pbnRzUmVjb3JkIHtcbiAgaWQ/OiBudW1iZXI7XG4gIHBvaW50czogbnVtYmVyO1xuICB0aW1lc3RhbXA6IG51bWJlcjtcbiAgdGFza0lkOiBzdHJpbmc7XG4gIHRhc2tUeXBlOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjbGFzcyBTbmFwV29ydERCIGV4dGVuZHMgRGV4aWUge1xuICB3b3JkcyE6IFRhYmxlPFdvcmQ+O1xuICBwb2ludHMhOiBEZXhpZS5UYWJsZTxQb2ludHNSZWNvcmQsIG51bWJlcj47XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoJ3NuYXB3b3J0Jyk7XG4gICAgdGhpcy52ZXJzaW9uKDEpLnN0b3Jlcyh7XG4gICAgICB3b3JkczogJysraWQsIHdvcmQsIGxhbmd1YWdlLCBjcmVhdGVkQXQnLFxuICAgICAgcG9pbnRzOiAnKytpZCwgcG9pbnRzLCB0aW1lc3RhbXAsIHRhc2tJZCwgdGFza1R5cGUnXG4gICAgfSk7XG4gIH1cblxuICBhc3luYyBhZGRQb2ludHMocmVjb3JkOiBPbWl0PFBvaW50c1JlY29yZCwgJ2lkJz4pIHtcbiAgICBjb25zdCBpZCA9IGF3YWl0IHRoaXMucG9pbnRzLmFkZChyZWNvcmQpO1xuICAgIC8vIERpc3BhdGNoIGN1c3RvbSBldmVudCB3aGVuIHBvaW50cyBhcmUgYWRkZWRcbiAgICB3aW5kb3cuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoJ3BvaW50c0FkZGVkJywgeyBcbiAgICAgIGRldGFpbDogeyAuLi5yZWNvcmQsIGlkIH1cbiAgICB9KSk7XG4gICAgcmV0dXJuIGlkO1xuICB9XG59XG5cbmV4cG9ydCBjb25zdCBkYiA9IG5ldyBTbmFwV29ydERCKCk7ICJdLCJuYW1lcyI6WyJEZXhpZSIsIlNuYXBXb3J0REIiLCJhZGRQb2ludHMiLCJyZWNvcmQiLCJpZCIsInBvaW50cyIsImFkZCIsIndpbmRvdyIsImRpc3BhdGNoRXZlbnQiLCJDdXN0b21FdmVudCIsImRldGFpbCIsImNvbnN0cnVjdG9yIiwidmVyc2lvbiIsInN0b3JlcyIsIndvcmRzIiwiZGIiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/db.ts\n"));

/***/ })

});